version: "3.9"
services: 
    manager:
        image: manager
        command: --template /src/haproxy.cfg.template
        volumes: 
            -  /var/run/docker.sock:/var/run/docker.sock
        ports:
            - 8080:8080
        labels:
            ingress.default: |
                timeout connect 5s
                timeout check 5s
                timeout client 2m
                timeout server 2m
            ingress.global: |
                # some globals
            ingress.frontend.default: |
                http-response set-header Cache-Control "max-age=0"
                http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
                http-response set-header X-Frame-Options "'none'"
                http-response set-header X-XSS-Protection "1;mode=block"
                http-response set-header X-Content-Type-Options "nosniff"
                http-response set-header X-Permitted-Cross-Domain-Policies "'none'"
                http-response set-header Referrer-Policy "no-referrer-when-downgrade"
                http-response set-header Content-Security-Policy "frame-ancestors 'self'"
                http-response set-header Feature-Policy "fullscreen 'none'; microphone 'none'"
    lb:
        image: lb
        environment: 
            MANAGER_ENDPOINT: http://manager:8080
        ports:
            - 3000:80
    app:
        image: nginx
        deploy:
            replicas: 2
            labels:
                                        # todo
                ingress.frontend: ""    # use default if empty
                ingress.host: ""        # only use acl if host is given
                ingress.path: "/"       # only use acl if path is given
                ingress.port: "80" 
                ingress.backend: |
                    balance leastconn
                    acl allowed_method method HEAD GET POST PUT
                    http-request deny unless allowed_method
    foo:
        image: nginx
        deploy:
            replicas: 2
            labels:
                ingress.path: "/foo/"
                ingress.port: "80" 
                ingress.backend: |
                    balance roundrobin
                    http-request set-path "%[path,regsub(^/foo/,/)]"


